# Set the prefix key to Ctl-s (from Ctl-b)
set -g prefix C-s

# Allow key bindings to be repeated without needing to use the prefix key
bind-key -r C-s send-prefix

# Source .tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Set options
set-option -g status-left-length 50
set-option -g default-terminal "screen-256color"
# This option changes the mode for command prompts
set-option -g status-keys "emacs"

# Windows

# Key bindings to move between tmux and Vim windows
# -n flag allows us to run the command without needing to first use the prefix # key
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# navigate to the last eindow
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Split window horizontally and vertically
# and preserve the current path you're in with -c flag
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

# Open new windows in the current directory
bind c new-window -c '#{pane_current_path}'

# Panes

# Resize panes in small increments
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Resize panes in large increments
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Break pane to a new window
bind-key b break-pane -d

# Choose tree
bind-key C-t choose-tree

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Allow brew services to work in tmux
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# Quickly view system & process info in htop
bind-key h split-window -h "htop"

# Fuzzy session switching
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind-key C-b send-keys 'tat && exit' 'C-m'
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Add gitsh quick pane
bind-key g split-window -h -c '#{pane_current_path}' -p 50 gitsh
